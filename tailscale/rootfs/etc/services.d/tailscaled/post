#!/command/with-contenv bashio
# ==============================================================================
# Home Assistant Community Add-on: Tailscale
# Runs after the machine has been logged in into the Tailscale network
# ==============================================================================
declare -a addresses
declare -a routes
declare route
declare ipinfo
declare tags

function list::contains() {
  local list=${1}
  local item=${2}

  if [[ "${list}" =~ (^|[[:space:]])"${item}"($|[[:space:]]) ]]; then
    return 0
  else
    return 1
  fi
}

# Find interfaces and matching addresses from which we can extract routes to be advertised
for interface in $(bashio::network.interfaces); do
  addresses+=($(bashio::network.ipv4_address "${interface}"))
  addresses+=($(bashio::network.ipv6_address "${interface}"))
done
routes=()

for address in "${addresses[@]}"; do
  if bashio::var.has_value "${address}"; then
    # Skip local link addresses
    if [[ "${address:0:6}" == "fe80::" ]] || [[ "${address:0:8}" == "169.254." ]];
    then
      continue
    fi

    # Skip if forwarding for the address family is disabled
    if [[ "${address}" =~ .*:.* ]];
    then
      [[ $(</proc/sys/net/ipv6/conf/all/forwarding) -eq 0 ]] && continue
    else
      [[ $(</proc/sys/net/ipv4/ip_forward) -eq 0 ]] && continue
    fi

    ipinfo="$(/usr/bin/ipcalc --json "${address}")"
    route=$(bashio::jq "${ipinfo}" '.NETWORK + "/" + .PREFIX')
    if ! list::contains "${routes[*]}" "${route}"; then
      routes+=("${route}")
    fi
  fi
done

# Get configured tags
tags=$(bashio::config "tags//[] | join(\",\")" "")

# Wait for socket to be available
while ! bashio::fs.socket_exists "/var/run/tailscale/tailscaled.sock";
do
  sleep 1
done

# Wait for the network to be available
while true;
do
  if /opt/tailscale status --json --peers=false --self=false \
    | jq --exit-status '.BackendState == "Running" or .BackendState == "NeedsLogin"' > /dev/null;
  then
    IFS=","
    /opt/tailscale up \
      --hostname "$(bashio::info.hostname)" \
      --advertise-exit-node \
      --accept-routes \
      --advertise-routes="${routes[*]}" \
      --advertise-tags="${tags}"

    break
  fi
  # Well... wait a bit more
  sleep 2
done

# Set up Tailscale Funnel for Home Assistant

# Wait for the network to be available and logged in
while true;
do
  if /opt/tailscale status --json --peers=false --self=false \
    | jq --exit-status '.BackendState == "Running"' > /dev/null;
  then

    # Remove previously configured proxy first
    # This one is needed because the configuration persistent between reboots
    /opt/tailscale serve --remove / &> /dev/null || bashio::log.debug "Removal failed, can happen when no previous proxy was configured..."

    bashio::log.debug "Checking if SSL is used..."
    if bashio::var.true "$(bashio::core.ssl)" ; then
      ha_service_protocol="https"
    else
      ha_service_protocol="http"
    fi
    bashio::log.debug "ha_service_protocol: ${ha_service_protocol}"
    if bashio::var.is_empty "${ha_service_protocol}" ; then
      bashio::exit.nok "Error checking if SSL is enabled"
    fi

    if /opt/tailscale status --self=true --peers=false --json | jq -rce ".CertDomains[]" > /dev/null ; then
      domain=$(/opt/tailscale status --self=true --peers=false --json | jq -rc ".CertDomains[]")
      bashio::log.info "Your Homeassistant instance is available via Tailscale."
      bashio::log.info "Your Domain is https://${domain}"
      # Configure Tailscale proxy
      # Set up proxy
      /opt/tailscale serve / proxy ${ha_service_protocol}://localhost:$(bashio::core.port)
    else
      bashio::log.warning "Can't get your Tailscale domain, is HTTPS support enabled?"
      bashio::log.warning "Enable HTTPS for your Tailnet to use the proxy feature"
      bashio::log.warning "https://tailscale.com/kb/1153/enabling-https/"

      break
    fi

    # Check if funnel is available
    if ! funnel_available=$(/opt/tailscale serve funnel off 2>&1) ; then
      bashio::log.error "${funnel_available}"
      break
    fi

    # Set up Funnel
    bashio::log.warning "Your Homeassistant instance is publicly available using your Tailscale domain."
    bashio::log.warning "https://${domain}"
    /opt/tailscale serve funnel on
    ### # Restart Tailscaled to publish changes
    ### s6-svc -r /run/service/tailscaled
    break
  fi
  # Well... wait a bit more
  sleep 2
done
