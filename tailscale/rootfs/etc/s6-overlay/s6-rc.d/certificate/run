#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Community Add-on: Tailscale
# Copies Tailscale Proxy certificates to /ssl folder
# ==============================================================================

declare domain
declare certfile keyfile

# Check if Tailscale HTTPS is enabled
if ! /opt/tailscale status --self=true --peers=false --json \
  | jq -rce '.Self.CapMap | has("https")' > /dev/null;
then
  bashio::log.error "Tailscale's HTTPS support is disabled. Therefore, can't save certificate files."
  bashio::exit.nok
fi

domain=$(/opt/tailscale status --self=true --peers=false --json | jq -rc ".CertDomains[0]")
certfile=$(bashio::config "lets_encrypt.certfile")
keyfile=$(bashio::config "lets_encrypt.keyfile")

# Copy certificate files first time this functionality is used
if ! cp --force --update "/data/state/certs/${domain}.crt" "/ssl/${certfile}"; then
  bashio::log.error "Unable to copy new certificate file '/data/state/certs/${domain}.crt' to '/ssl/${certfile}'"
  bashio::log.error "Check configuration and restart add-on"
fi
if ! cp --force --update "/data/state/certs/${domain}.key" "/ssl/${keyfile}"; then
  bashio::log.error "Unable to copy new key file '/data/state/certs/${domain}.key' to '/ssl/${keyfile}'"
  bashio::log.error "Check configuration and restart add-on"
fi

# After tailscale serv is up, it will automatically update the files, we can catch the events
inotifywait --quiet --monitor /data/state/certs --include='^.*?\.(crt|key)$' \
    --event='close_write,moved_to' --format '%f' \
  | while IFS= read -r changed
do
  # Currently if the machine name is changed, tailscale changes the json status,
  # but the proxy isn't restarted and do not change to the new domain, and won't create new certs for the new domain,
  # restart of the add-on is required, and a restart will "update" the $domain variable
  # # Check if domain has changed
  # domain=$(/opt/tailscale status --self=true --peers=false --json | jq -rc ".CertDomains[0]")

  # Check if filename is the domain name (do not update on other certificate changes)
  if [[ "${changed%.*}" == "${domain}" ]]; then
    if [[ "${changed##*.}" == "crt" ]]; then
      if ! cp --force --update "/data/state/certs/$changed" "/ssl/${certfile}"; then
        bashio::log.error "Unable to copy renewed certificate file '/data/state/certs/$changed' to '/ssl/${certfile}'"
        bashio::log.error "Check configuration and restart add-on"
      fi
    fi
    if [[ "${changed##*.}" == "key" ]]; then
      if ! cp --force --update "/data/state/certs/$changed" "/ssl/${keyfile}"; then
        bashio::log.error "Unable to copy renewed key file '/data/state/certs/$changed' to '/ssl/${keyfile}'"
        bashio::log.error "Check configuration and restart add-on"
      fi
    fi
  fi
done
