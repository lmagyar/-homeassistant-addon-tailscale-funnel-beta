#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Community Add-on: Tailscale
# Take down the S6 supervision tree when Tailscale fails
# ==============================================================================
declare exit_code
readonly exit_code_container=$(</run/s6-linux-init-container-results/exitcode)
readonly exit_code_service="${1}"
readonly exit_code_signal="${2}"
readonly service="tailscaled"

declare -a routes=()

# In case of non userspace networking remove local subnets from ip rules
if bashio::config.false "userspace_networking"; then
  readarray -t routes < <( \
    { ip -4 rule list; ip -6 rule list; } \
    | grep -E '^5001:' \
    | sed -nr 's/^\d+:\s+from all to ([^\s]+) lookup main/\1/p')
  for route in "${routes[@]}"; do
    bashio::log.info "Removing route ${route} from ip rules"
    if [[ "${route}" =~ .*:.* ]]; then
      ip -6 rule del to "${route}"
    else
      ip -4 rule del to "${route}"
    fi
  done
fi

bashio::log.info \
  "Service ${service} exited with code ${exit_code_service}" \
  "(by signal ${exit_code_signal})"

if [[ "${exit_code_service}" -eq 256 ]]; then
  if [[ "${exit_code_container}" -eq 0 ]]; then
    echo $((128 + $exit_code_signal)) > /run/s6-linux-init-container-results/exitcode
  fi
  [[ "${exit_code_signal}" -eq 15 ]] && exec /run/s6/basedir/bin/halt
elif [[ "${exit_code_service}" -ne 0 ]]; then
  if [[ "${exit_code_container}" -eq 0 ]]; then
    echo "${exit_code_service}" > /run/s6-linux-init-container-results/exitcode
  fi
  exec /run/s6/basedir/bin/halt
fi
